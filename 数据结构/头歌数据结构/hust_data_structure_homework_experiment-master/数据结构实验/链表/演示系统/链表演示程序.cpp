#include"../def.h"
#include"../链表-遍历.h"
#include"../链表-插入.h"
#include"../链表-查找元素.h"
#include"../链表-创建.h"
#include"../链表-获取后继元素.h"
#include"../链表-获取前驱元素.h"
#include"../链表-获取元素.h"
#include"../链表-判空.h"
#include"../链表-清空.h"
#include"../链表-求长度.h"
#include"../链表-删除.h"
#include"../链表-文件操作.h"
#include"../链表-销毁.h"
#include"../附加功能/链表-翻转.h"
#include"../附加功能/链表-删除倒数第n个元素.h"
#include"../附加功能/链表-排序.h"
#include"../附加功能/多链表管理.h"
#include"链表数据构造器.h"
int main()
{
int i=0,j=0,op1=1,op2=0,op3=0,sign=0,n=0,ret=0;
int len[3]={0,10000,1000000};
const char*namelist[3]={"test0.txt","test1.txt","test2.txt"};
const char*rnamelist[3]={"result0.txt","result1.txt","result2.txt"};
LinkList L=NULL;
LinkLists*list_table=NULL;
char name[20];
while(op1)
{
	system("cls");	printf("\n\n");
	printf("      以链表实现的线性表菜单 \n");
	printf("-------------------------------------------------\n");
	printf("    	  1. 初始化线性表       9. 查找元素\n");
	printf("    	  2. 销毁线性表         10. 获取前驱元素\n");
	printf("    	  3. 清空线性表         11. 获取后继元素 \n");
	printf("    	  4. 判定线性表是否为空 12. 插入元素\n");
	printf("    	  5. 求线性表的长度     13. 删除元素\n");
	printf("    	  6. 获取元素           14. 遍历线性表\n");
	printf("    	  7. 翻转线性表         15. 删除倒数第n个元素\n");
	printf("    	  8. 排序线性表         16. 线性表的文件操作\n");
	printf("    	  0. 退出\n");
	printf("-------------------------------------------------\n");
	printf("    请选择你的操作[0~16]:");
	scanf("%d",&op1);
	if(op1<0||op1>16)
	{
		printf("Invalid Input!\n");
		system("pause");
		exit(-1);
	}
	printf("请问您是否需要先创建若干个线性表？(本操作会测评多线性表管理的插入)(本操作会覆盖掉已有的线性表)是：1，否：0\n");
	scanf("%d",&op2);
	if(op2!=1&&op2!=0)
	{
		printf("Invalid Input!\n");
		system("pause");
		exit(-1);
	}
	if(op2==1)//创建线性表的管理表。 
	{
		InitLists(list_table);
		printf("请输入您需要创建的线性表的个数。\n"); 
		scanf("%d",&n);
		for(j=0;j<n;j++)
		{
			printf("请输入您给这个线性表起的名字。\n");
			scanf("%s",&name);
			printf("您输入的名字是%s。\n",name);
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在保存这个线性表...\n");
			sign=AddList(list_table,L,name); 
			if(sign==OK)
			{
				printf("线性表保存成功！\n");
				L=NULL;
			}
			else
			{
				printf("线性表保存失败！\n");
				DestroyList(L);
			}
		}
	}
    switch(op1)
	{
	   case 1://创建线性表。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.手动输入数据。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3!=1)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			/*L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;*/
			sign=InitList(L);
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			if(sign==OK)
			{
				printf("线性表创建成功！\n");
				printf("您输入的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
		    else
			{
				printf("线性表创建失败！\n");
				DestroyList(L);
			}
			printf("本次测评结束。\n"); 
		}
		DestroyList(L);
		L=NULL;
		getchar();getchar();
		break;
	   case 2://销毁线性表。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。(本操作会测评多线性表管理的查找和删除，以下同理。)\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)//自动测试。 
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				sign=DestroyList(L);
				if(sign==OK)
				{
					printf("线性表销毁成功！\n");
					printf("\n");
				}
		    	else{printf("线性表销毁失败！\n");}
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在销毁线性表...\n"); 
			sign=DestroyList(L);
			if(sign==OK){printf("线性表销毁成功！\n");}
			else{printf("线性表销毁失败！\n");}
			printf("本次测评结束。\n");
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在销毁线性表...\n");
			sign=DestroyList(L);
			if(sign==OK){printf("线性表销毁成功！\n");}
			else{printf("线性表销毁失败！\n");}
			printf("正在从管理表中删除...\n");
			sign=DelList(list_table,name);
			if(sign==OK){printf("删除成功！\n");}
			else{printf("删除失败！\n");}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 3://清空线性表。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				sign=ClearList(L);
				if(sign==OK)
				{
					printf("线性表清空成功！\n");
					printf("\n");
				}
		    	else{printf("线性表清空失败！\n");}
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在清空线性表...\n"); 
			sign=ClearList(L);
			if(sign==OK){printf("线性表清空成功！\n");}
			else{printf("线性表清空失败！\n");}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在清空线性表...\n");
			sign=ClearList(L);
			if(sign==OK){printf("线性表清空成功！\n");}
			else{printf("线性表清空失败！\n");}
			printf("本次测评结束。\n"); 
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 4://判空线性表。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				sign=ListEmpty(L);
				if(sign==TRUE){printf("线性表为空。\n");}
				else if(sign==FALSE){printf("线性表不为空。\n");}
				else{printf("线性表判空失败！\n");}
				printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在进行线性表的判空...\n"); 
			sign=ListEmpty(L);
			if(sign==TRUE){printf("线性表为空。\n");}
			else if(sign==FALSE){printf("线性表不为空。\n");}
			else{printf("线性表判空失败！\n");}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在进行线性表的判空...\n"); 
			sign=ListEmpty(L);
			if(sign==TRUE){printf("线性表为空。。\n");}
			else if(sign==FALSE){printf("线性表不为空。\n");}
			else{printf("线性表判空失败！\n");}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 5://求表长 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				ret=ListLength(L);
				if(ret==INFEASIBLE){printf("INFEASIBLE！\n");}
				else{printf("线性表的长度是%d。\n",ret);}
				printf("本次测评结束。\n"); 
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在求线性表的长度...\n"); 
			ret=ListLength(L);
			if(ret==INFEASIBLE){printf("INFEASIBLE！\n");}
			else{printf("线性表的长度是%d。\n",ret);}
			printf("本次测评结束。\n"); 
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在求线性表的长度...\n"); 
			ret=ListLength(L);
			if(ret==INFEASIBLE){printf("INFEASIBLE！\n");}
			else{printf("线性表的长度是%d。\n",ret);}
			printf("本次测评结束。\n"); 
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 6://获取元素。 
		printf("请问您要如何测试这个函数？\n"); 
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				j=getrnum();
				printf("索引是%d。\n",j);
				GetElem(L,j,ret);
				if(ret==INFEASIBLE){printf("空线性表！\n");}
				else if(ret==ERROR){printf("不合法的索引！\n");}
				else{printf("索引是%d的元素是%d。\n",j,ret);}
				printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入索引。\n");
			scanf("%d",&i); 
			printf("正在获取元素...\n"); 
			GetElem(L,i,ret);
			if(ret==INFEASIBLE){printf("空线性表！\n");}
			else if(ret==ERROR){printf("不合法的索引！\n");}
			else{printf("索引是%d的元素是%d。\n",i,ret);}
			printf("本次测评结束。\n"); 
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入索引。\n");
			scanf("%d",&i); 
			printf("正在获取元素...\n"); 
			sign=GetElem(L,i,ret);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("不合法的索引！\n");}
			else{printf("索引是%d的元素是%d。\n",i,ret);}
			printf("本次测评结束。\n"); 
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 7://翻转线性表。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				sign=reverseList(L);
				if(sign==INFEASIBLE){printf("空线性表。\n");}
				else
				{
					printf("线性表翻转成功！\n");
					savelistforlinklist(L,rnamelist[i]);
					printf("\n");
				}
				printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在进行线性表的翻转...\n"); 
			sign=reverseList(L);
			if(sign==INFEASIBLE){printf("空线性表。\n");}
			else
			{
				printf("翻转后的线性表如下。\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在进行线性表的翻转...\n"); 
			sign=reverseList(L);
			if(sign==INFEASIBLE){printf("空线性表。\n");}
			else
			{
				printf("翻转后的线性表如下。\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 8://排序线性表。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				L->next=sortList(L->next);
				if(L!=NULL)
				{
					printf("线性表排序成功！\n");
					savelistforlinklist(L,rnamelist[i]);
					printf("\n");
				}
		    	else{printf("线性表排序失败！\n");}
		    	printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在进行线性表的排序...\n"); 
			if(L==NULL){printf("空线性表。\n");}
			else
			{
				L->next=sortList(L->next);
				printf("排序后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在进行线性表的排序...\n"); 
			if(L==NULL){printf("空线性表。\n");}
			else
			{
				L->next=sortList(L->next);
				printf("排序后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 9://查找元素。 
		printf("请问您要如何测试这个函数？\n"); 
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				j=getrnum();
				printf("本次测试元素是%d。\n",j);
				ret=LocateElem(L,j);
				if(ret==INFEASIBLE){printf("空线性表！\n");}
				else if(ret==ERROR){printf("这个元素在线性表中不存在。\n");}
				else{printf("索引是%d的元素是%d。\n",ret,j);}
				printf("本次测评结束。\n"); 
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i); 
			printf("正在查找元素...\n"); 
			ret=LocateElem(L,i);
			if(ret==INFEASIBLE){printf("空线性表！\n");}
			else if(ret==ERROR){printf("这个元素在线性表中不存在。\n");}
			else{printf("索引是%d的元素是%d。\n",ret,i);}
			printf("本次测评结束。\n"); 
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i); 
			printf("正在查找元素...\n"); 
			ret=LocateElem(L,i);
			if(ret==INFEASIBLE){printf("空线性表！\n");}
			else if(ret==ERROR){printf("这个元素在线性表中不存在。\n");}
			else{printf("索引是%d的元素是%d。\n",ret,i);}
			printf("本次测评结束。\n"); 
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 10://获取元素前驱。 
		printf("请问您要如何测试这个函数？\n"); 
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				j=getrnum();
				printf("本次测试元素是%d。\n",j);
				sign=PriorElem(L,j,ret);
				if(sign==INFEASIBLE){printf("空线性表！\n");}
				else if(sign==ERROR){printf("元素未找到或元素无前驱！\n");}
				else{printf("元素%d的前驱是%d。\n",j,ret);}
				printf("本次测评结束。\n"); 
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i); 
			printf("正在获取元素的前驱...\n"); 
			sign=PriorElem(L,i,ret);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("元素未找到或元素无前驱！\n");}
			else{printf("元素%d的前驱是%d。\n",i,ret);}
			printf("本次测评结束。\n"); 
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i); 
			printf("正在获取元素的前驱...\n"); 
			sign=PriorElem(L,i,ret);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("元素未找到或元素无前驱！\n");}
			else{printf("元素%d的前驱是%d。\n",i,ret);}
			printf("本次测评结束。\n"); 
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 11://获取后继。 
		printf("请问您要如何测试这个函数？\n"); 
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				j=getrnum();
				printf("本次测试元素是%d。\n",j);
				sign=NextElem(L,j,ret);
				if(sign==INFEASIBLE){printf("空线性表！\n");}
				else if(sign==ERROR){printf("元素未找到或元素无后继！\n");}
				else{printf("元素%d的后继是%d。\n",j,ret);}
				printf("本次测评结束。\n"); 
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i); 
			printf("正在获取元素的后继...\n"); 
			sign=NextElem(L,i,ret);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("元素未找到或元素无后继！\n");}
			else{printf("元素%d的后继是%d。\n",i,ret);}
			printf("本次测评结束。\n"); 
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i); 
			printf("正在获取元素的后继...\n"); 
			sign=NextElem(L,i,ret);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("元素未找到或元素无后继！\n");}
			else{printf("元素%d的后继是%d。\n",i,ret);}
			printf("本次测评结束。\n"); 
		}
		L=NULL;
		getchar();getchar();
		break;
	   case 12://插入元素。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				j=getrnum();
				printf("本次测试元素是%d。\n",j);
				ret=getrnum();
				printf("本次测试索引是%d。\n",ret);
				sign=ListInsert(L,ret,j);
				if(sign==INFEASIBLE){printf("空线性表！\n");}
				else if(sign==ERROR){printf("不合法的索引！\n");}
				else
				{
					printf("插入成功！\n");
					savelistforlinklist(L,rnamelist[i]);
					printf("\n");
				}
				printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i);
			printf("请输入索引，元素将插入到这个索引所指元素之前。\n");
			scanf("%d",&ret);
			printf("正在插入元素...\n");
			sign=ListInsert(L,ret,i);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("不合法的索引！\n");}
			else
			{
				printf("插入后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i);
			printf("请输入索引，元素将插入到这个索引所指元素之前。\n");
			scanf("%d",&ret);
			printf("正在插入元素...\n");
			sign=ListInsert(L,ret,i);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("不合法的索引！\n");}
			else
			{
				printf("插入后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	case 13://删除元素。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				j=getrnum();
				printf("本次测试索引是%d。\n",j);
				sign=ListDelete(L,j,ret);
				if(sign==INFEASIBLE){printf("空线性表！\n");}
				else if(sign==ERROR){printf("不合法的索引！\n");}
				else
				{
					printf("删除成功！\n",ret);
					savelistforlinklist(L,rnamelist[i]); 
				}
				printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入索引。\n");
			scanf("%d",&i);
			printf("正在删除元素...\n");
			sign=ListDelete(L,i,ret);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("不合法的索引！\n");}
			else
			{
				printf("删除的元素是%d。\n",ret);
				printf("删除后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入元素。\n");
			scanf("%d",&i);
			printf("正在删除元素...\n");
			sign=ListDelete(L,i,ret);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else if(sign==ERROR){printf("不合法的索引！\n");}
			else
			{
				printf("删除的元素是%d。\n",ret);
				printf("删除后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	case 14://遍历线性表。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				if(i==2){printf("为防止刷屏，不显示结果！\n");}
				else
				{
					sign=ListTraverse(L);
					printf("\n");
					if(sign==INFEASIBLE){printf("空线性表！\n");}
				}
				printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在遍历线性表...\n");
			sign=ListTraverse(L);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("正在遍历线性表...\n");
			sign=ListTraverse(L);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	case 15://删除倒数第n个元素。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.自动测试。\n2.手动输入数据。\n3.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>3)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)
		{
			for(i=0;i<3;i++)
			{
				L=(LinkList)malloc(sizeof(LNode));
				L->next=NULL;
				createdataforlinkedlist(L,len[i],namelist[i]);
				printf("本次测试数据集的个数是%d。\n",len[i]);
				j=getrnum();
				printf("本次测试索引是%d。\n",j);
				ret=RemoveNthFromEnd(L,j);
				if(ret==INFEASIBLE){printf("空线性表！\n");}
				else if(ret==ERROR){printf("不合法的索引！\n");}
				else
				{
					printf("删除成功！\n",ret);
					savelistforlinklist(L,rnamelist[i]); 
				}
				printf("本次测评结束。\n");
		    	DestroyList(L);
			}
		}
		else if(op3==2)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入要删除倒数第几个元素。\n");
			scanf("%d",&i);
			printf("正在删除元素...\n");
			ret=RemoveNthFromEnd(L,i); 
			if(ret==INFEASIBLE){printf("空线性表！\n");}
			else if(ret==ERROR){printf("不合法的索引！\n");}
			else
			{
				printf("删除后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入要删除倒数第几个元素。\n");
			scanf("%d",&i);
			printf("正在删除元素...\n");
			ret=RemoveNthFromEnd(L,i); 
			if(ret==INFEASIBLE){printf("空线性表！\n");}
			else if(ret==ERROR){printf("不合法的索引！\n");}
			else
			{
				printf("删除后的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
			}
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	case 16://线性表文件操作。 
		printf("请问您要如何测试这个函数？\n");
		printf("1.手动输入数据。2.从已有线性表中选择。\n"); 
		printf("请选择。\n");
		scanf("%d",&op3);
		if(op3<=0||op3>2)
		{
			printf("Invalid Input!");
			break;
		}
		if(op3==1)//手动输入数据。 
		{
			printf("请您输入数据，以0结尾。\n");
			L=(LinkList)malloc(sizeof(LNode));
			L->next=NULL;
			LNode *s,*r=L;
    		scanf("%d",&i);
     		while(i)
			{
				s=(LNode*) malloc(sizeof(LNode));
				s->data=i;
				r->next=s;
				r=s;
				scanf("%d",&i);
			}
			r->next=NULL;
			printf("您输入的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入文件名，不要超过20个字符。\n");
			scanf("%s",&name);
			printf("正在保存元素...\n");
			sign=SaveList(L,name);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else
			{
				printf("已保存。\n");
				printf("正在读入线性表...\n");
				LoadList(L,name);
				printf("读入的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
		    }
			printf("本次测评结束。\n");
			DestroyList(L);
		}
		else//从已有链表中选择。 
		{
			if(list_table==NULL)
			{
				printf("没有已有线性表！\n");
				break;
			}
			printf("请输入线性表的名字。\n");
			scanf("%s",&name);
			L=FindList(list_table,name);
			if(L==NULL)
			{
				printf("未找到线性表！\n");
				break;
			}
			printf("您选择的线性表如下：\n");
			ListTraverse(L);
			printf("\n");
			printf("请输入文件名，不要超过20个字符。\n");
			scanf("%s",&name);
			printf("正在保存元素...\n");
			sign=SaveList(L,name);
			if(sign==INFEASIBLE){printf("空线性表！\n");}
			else
			{
				printf("已保存。\n");
				printf("正在读入线性表...\n");
				LoadList(L,name);
				printf("读入的线性表如下：\n");
				ListTraverse(L);
				printf("\n");
		    }
			printf("本次测评结束。\n");
		}
		L=NULL;
		getchar();getchar();
		break;
	case 0:
		system("pause");
         break;
	}//end of switch
}//end of while
printf("欢迎下次再使用本系统！\n");
}//end of main()
