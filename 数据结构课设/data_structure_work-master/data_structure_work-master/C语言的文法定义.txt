<program>-><segment><program>
<segment>->MAC|EXTERN|<type><def>
<type>->INT|VOID|DOUBLE|CHAR|FLOAT
<def>->*ID<init><deflist>|ID<idtail>
<init>->=<expr>
<deflist>->,<defdata><deflist>|;
<idtail>-><varrdef><deflist>|(<para>)<funtail>
<defdata>->*ID<init>|ID<varrdef>
<varrdef>->[NUM]|<init>
<funtail>->;|<block>
<para>-><type><paradata><paralist>|E
<funtail>->;|<block>
<paradata>->*ID|ID<paradatatail>
<paralist>->,<type><paradata><paralist>|E
<paradatatail>->[NUM]|E
<block>->{<subprogram>}
<expr>-><assexpr>
<subprogram>-><type>ID<varrdef><deflist><subprogram>|<statement><subprogram>|E
<assexpr>-><orexpr><asstail>
<statement>-><altexpr>;|<whilestat>|<forstat>|<dowhilestat>|<ifstat>|BREAK|CONTINUE|RETURN|GETCHAR|PRINTF<printftail>|SCANF<scanftail>
<orexpr>-><andexpr><ortail>
<asstail>->=<orexpr><asstail>|E
<altexpr>-><expr>|E
<whilestat>->WHILE(<altexpr>){<block>
<forstat>->FOR(<altexpr>;<altexpr>;<altexpr>){<block>
<dowhilestat>->DO<block>WHILE(<altexpr>)
<ifstat>->IF(<expr>)<block><elsestat>
<andexpr>-><cmpexpr><andtail>
<ortail>->OR<andexpr><ortail>|E
<elsestat>->ELSE<block>|E
<cmpexpr>-><aloexpr><cmptail>
<andtail>->AND<cmpexpr><andtail>|E
<aloexpr>-><item><alotail>
<cmptail>-><|>|>=|<=|!=|==<aloexpr><cmptail>|E
<item>-><factor><itemtail>
<alotail>->-|+<item><alotail>|E
<factor>->-|&|--|++<factor>|<val>
<itemtail>->*|%|/<factor><itemtail>|E
<val>-><elem>--|++
<elem>->ID<idexpr>|(<expr>)|<literal>
<idexpr>->[<expr>]|(<realarg>)|E
<literal>->NUM|CHAR|STR
<realarg>-><expr><arglist>|E
<arglist>->,<expr><arglist>|E